apiVersion: 1

deleteDatasources:
  - name: Prometheus
  - name: Tempo

datasources:
  - name: Prometheus
    type: prometheus
    uid: 'PBFA97CFB590B2093'
    access: proxy
    orgId: 1
    url: http://prometheus:9090
    basicAuth: false
    isDefault: false
    editable: true
    jsonData:
      httpMethod: GET
    version: 1

  # - name: Tempo
  #   type: tempo
  #   uid: tempo
  #   url: http://tempo:3200
  #   jsonData:
  #     httpMethod: GET
  #     serviceMap:
  #       datasourceUid: 'PBFA97CFB590B2093'
  #   version: 1

  - name: Tempo
    type: tempo
    access: proxy
    orgId: 1
    url: http://tempo:3200
    basicAuth: false
    isDefault: false
    version: 1
    editable: true
    uid: tempo
    jsonData:
      # tracesToLogsV2:
      #   datasourceUid: 'loki'
      #   spanStartTimeShift: '-1h'
      #   spanEndTimeShift: '1h'
      #   tags: ['job', 'instance', 'pod', 'namespace']
      #   filterByTraceID: false
      #   filterBySpanID: false
      #   customQuery: true
      #   query: 'method="$${__span.tags.method}"'
      tracesToMetrics:
        datasourceUid: 'PBFA97CFB590B2093'
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
        tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
        queries:
          - name: 'Sample query'
            query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
      # tracesToProfiles:
      #   datasourceUid: 'grafana-pyroscope-datasource'
      #   tags: ['job', 'instance', 'pod', 'namespace']
      #   profileTypeId: 'process_cpu:cpu:nanoseconds:cpu:nanoseconds'
      #   customQuery: true
      #   query: 'method="$${__span.tags.method}"'
      serviceMap:
        datasourceUid: 'PBFA97CFB590B2093'
      nodeGraph:
        enabled: true
      search:
        hide: false
      traceQuery:
        timeShiftEnabled: true
        spanStartTimeShift: '1h'
        spanEndTimeShift: '-1h'
      spanBar:
        type: 'Tag'
        tag: 'http.path'
